#!/usr/bin/env bash

####### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o posix      # more strict failures in subshells
# set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(cd $(dirname $0); cd ..; pwd)
heroku_dir=$build_dir/.heroku
mkdir -p $heroku_dir/mongo
warnings=$(mktemp)

# Update MongoDB version to a later version (e.g., 5.0.0 or higher)
mongo_version="5.0.0"

[[ $STACK = "heroku-16" ]] && os_id="ubuntu1604" || os_id="ubuntu2004"

# Echo the os_id for debugging
echo "Determined OS ID: $os_id"

file_name="mongodb-linux-x86_64-${os_id}-${mongo_version}.tgz"
folder_name=$(echo "$file_name" | sed 's/\.tgz$//')
download_url="https://fastdl.mongodb.org/linux/${file_name}"

# Download and extract MongoDB binaries
curl -f -s -o /tmp/mongodb.tgz "${download_url}" || { echo "Download failed! Exiting."; exit 1; }
tar xzf /tmp/mongodb.tgz -C /tmp || { echo "Extraction failed! Exiting."; exit 1; }

# Move MongoDB binaries into the app directory
mv "/tmp/${folder_name}"/* $heroku_dir/mongo
chmod +x $heroku_dir/mongo/bin/*

echo "-----> Creating runtime environment"
mkdir -p $build_dir/.profile.d
echo "export PATH=\"\$HOME/.heroku/mongo/bin:\$PATH\"" > $build_dir/.profile.d/mongo.sh

# Additional debug information
echo "MongoDB binaries installed. PATH updated."
