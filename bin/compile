#!/usr/bin/env bash

####### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o posix      # more strict failures in subshells
# set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(cd $(dirname $0); cd ..; pwd)
heroku_dir=$build_dir/.heroku
mkdir -p $heroku_dir/mongo
warnings=$(mktemp)

# Allow version override from environment variable, default to MongoDB 5.0
mongo_version="5.0.24"
echo "-----> Downloading and installing MongoDB version ${mongo_version}..."

# Determine OS based on Heroku stack
[[ $STACK = "heroku-16" ]] && os_id="ubuntu1604" || os_id="ubuntu1804"

# Prepare file names and download URLs
file_name="mongodb-linux-x86_64-${os_id}-${mongo_version}.tgz"
folder_name=$(echo "$file_name" | sed 's/\.tgz$//')
download_url="https://fastdl.mongodb.org/linux/${file_name}"

# Download MongoDB binary and checksum
curl -s -o /tmp/mongodb.tgz "${download_url}"
curl -s -o /tmp/mongodb.tgz.sha256 "${download_url}.sha256"

# Verify the integrity of the downloaded binary
cd /tmp
sha256sum -c mongodb.tgz.sha256

# Extract MongoDB binary
tar xzf mongodb.tgz -C /tmp

# Move MongoDB binaries into the app directory
mv "/tmp/${folder_name}"/* $heroku_dir/mongo
chmod +x $heroku_dir/mongo/bin/*

# Clean up temporary files
rm -rf "/tmp/${folder_name}"
rm /tmp/mongodb.tgz /tmp/mongodb.tgz.sha256

echo "-----> Creating runtime environment"
mkdir -p $build_dir/.profile.d
echo "export PATH=\"\$HOME/.heroku/mongo/bin:\$PATH\"" > $build_dir/.profile.d/mongo.sh
